name: Leapp Desktop App CD

on:
  push:
    branches:
      - master

env:
  S3_BUCKET: s3://heqing-leapp-test


jobs:
  tag-validation:
    outputs:
      validator: ${{ steps.validator.outputs.VALID_TAG }}
      tag-version: ${{ steps.validator.outputs.TAG_VERSION }}
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: master

      - name: Check Tag Validity
        id: validator
        run: |
          git fetch
          LOG=$(git log --format="%H" -n 1)
          TAG=$(git tag --contains $LOG)
          REGEX="^v[0-9]+\.[0-9]+.[0-9]+"
          if [[ $TAG =~ $REGEX ]]; then IS_VALID_TAG=1; else IS_VALID_TAG=0; fi;
          echo "::set-output name=VALID_TAG::$IS_VALID_TAG"
          echo "::set-output name=TAG_VERSION::$TAG"

      - name: If valid tag set
        if: steps.validator.outputs.VALID_TAG == 1
        run: |
          echo "Valid Tag Found - Building Desktop App..."

      - name: If not valid tag set
        if: steps.validator.outputs.VALID_TAG != 1
        run: |
          echo "Not a Desktop App Release Tag or Invalid one Found - Exiting..."

  build-linux:
    runs-on: ubuntu-latest
    needs: [ tag-validation ]
    if: needs.tag-validation.outputs.validator == 1
    steps:
      - uses: actions/checkout@v3

      - name: Build Linux desktop app
        run: |
          cd packages/desktop-app
          npm install
          npm run release-linux
          rm -Rf ./release/linux-unpacked
          rm -Rf ./release/.cache
          rm -Rf ./release/builder-debug.yml
          rm -Rf ./release/builder-effective-config.yaml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Release draft to S3
        run: |
          cd packages/desktop-app
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          aws s3 cp ./release/ "${{ env.S3_BUCKET }}/$TAG_VERSION/" --recursive

      - name: Clean build
        run: |
          cd packages/desktop-app
          rm -Rf ./release/mac
          rm -Rf ./release/mac-unpacked
          rm -Rf ./release/.cache
          rm -Rf ./release/builder-debug.yml
          rm -Rf ./release/builder-effective-config.yaml
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          rm "./release/Leapp-$TAG_VERSION-mac.zip"
          rm "./release/Leapp-$TAG_VERSION-mac.zip.blockmap"
          zip "./release/Leapp-$TAG_VERSION-mac.zip" "./release/Leapp-$TAG_VERSION.dmg"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Release draft to S3
        run: |
          cd packages/desktop-app
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          aws s3 cp ./release/ "${{ env.S3_BUCKET }}/$TAG_VERSION/" --recursive

      - name: Clean build
        run: |
          cd packages/desktop-app
          rm -Rf ./release/mac
          rm -Rf ./release/mac-unpacked
          rm -Rf ./release/.cache
          rm -Rf ./release/builder-debug.yml
          rm -Rf ./release/builder-effective-config.yaml
          rm -Rf ./release/mac-arm64
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          rm "./release/Leapp-$TAG_VERSION-arm64-mac.zip"
          rm "./release/Leapp-$TAG_VERSION-arm64-mac.zip.blockmap"
          zip "./release/Leapp-$TAG_VERSION-mac-arm64.zip" "./release/Leapp-$TAG_VERSION-arm64.dmg"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Release draft to S3
        run: |
          cd packages/desktop-app
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          aws s3 cp ./release/ "${{ env.S3_BUCKET }}/$TAG_VERSION/" --recursive

  publish-draft:
    runs-on: ubuntu-latest
    environment: prod
    needs: [ tag-validation, build-linux ]
    if: needs.tag-validation.outputs.validator == 1
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Move draft to latest
        run: |
          TAG_VERSION=${{ needs.tag-validation.outputs.tag-version }}
          TAG_VERSION=${TAG_VERSION:1}
          aws s3 rm "${{ env.S3_BUCKET }}/latest" --recursive
          aws s3 cp "${{ env.S3_BUCKET }}/$TAG_VERSION/" "${{ env.S3_BUCKET }}/latest" --recursive
